name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Docusaurus
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  deploy:
    name: Deploy to GitHub Pages
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-qiniu:
    name: Upload to Ali # Qiniu
    needs: build   # 只依赖 build，不依赖 deploy
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./artifact

      - name: Extract build
        run: |
          mkdir -p build
          tar -xf artifact/artifact.tar -C build

      - name: Deploy to Ali
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.ALI_HOST }}
          username: ${{ secrets.ALI_USERNAME }}
          key: ${{ secrets.ALI_SSH_KEY }}
          source: "./build"
          target: "/tmp/djzzwx-github-build"
          rm: true

      # - name: Set up Qshell
      #   run: |
      #     wget https://github.com/qiniu/qshell/releases/download/v2.16.1/qshell-v2.16.1-linux-amd64.tar.gz
      #     tar -xzf qshell-v2.16.1-linux-amd64.tar.gz
      #     mv qshell /usr/local/bin/qshell
      #     chmod a+x /usr/local/bin/qshell

      # - name: Upload to Qiniu
      #   run: |
      #     qshell account ${{ secrets.QINIU_AK }} ${{ secrets.QINIU_SK }} github
      #     qshell qupload2 --src-dir=./build --bucket=djz-note --overwrite
      #     qshell listbucket2 djz-note | awk '{print "http://note-qn.her-sheep.top/"$1}' > list.txt
      #     qshell cdnrefresh -i list.txt
